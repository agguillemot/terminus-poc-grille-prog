{"version":3,"sources":["contexts/cinema.tsx","components/AddMovie/style.ts","data/movies.ts","components/AddMovie/index.tsx","components/Session/style.ts","components/utils/timeStrToMinutes.ts","components/Session/index.tsx","components/Room/style.ts","components/utils/formatTime.ts","components/utils/sortSession.ts","components/Room/index.tsx","data/rooms.ts","App-style.ts","components/utils/computeOpeningTime.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CinemaContext","createContext","inDuration","outDuration","openingTime","closingTime","totalOpeningTime","CinemaContextProvider","children","props","Provider","value","useCinemaContext","useContext","Backdrop","styled","div","Modale","CloseBtn","button","AddBtn","MOVIES","id","title","duration","AddMovie","onAddMovie","useState","isOpen","openModal","undefined","selectedMovie","selectMovie","selectedTime","selectTime","formIsComplete","useEffect","onClick","onChange","e","currentTarget","map","movie","type","startTime","disabled","durationToHeight","Wrapper","commonProps","InBlock","OutBlock","Movie","DeleteBtn","Schedule","error","timeStrToMinutes","timeStr","split","hoursStr","minutesStr","hours","parseInt","Session","session","deleteSession","completeMovie","find","m","scheduleError","TechInfos","Movies","MaxProjectionTime","formatTime","time","Math","floor","minutes","slice","sortSessionByStartTime","session1","session2","Room","room","index","seats","screen","sound","sessions","addSession","totalProjectionTime","reduce","total","sort","ROOMS","Row","InputGroup","computeOpeningTime","differenceInMinutes","parse","Date","App","inValue","setIn","outValue","setOut","setOpeningTime","setClosingTime","1","2","3","setSessions","htmlFor","min","roomIndex","newSession","sessionToRemove","roomSessions","indexToRemove","findIndex","s","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.667a46c4.chunk.js","sourcesContent":["import React, { createContext, PropsWithChildren, useContext } from 'react';\n\n\ninterface ICinemaContext {\n  inDuration: number;\n  outDuration: number;\n  openingTime: string;\n  closingTime: string;\n  totalOpeningTime: number; // in minutes\n}\n\nconst CinemaContext = createContext<ICinemaContext>({\n  inDuration: 15,\n  outDuration: 15,\n  openingTime: '09:00',\n  closingTime: '23:00',\n  totalOpeningTime: 840,\n});\n\nexport const CinemaContextProvider = ({ children, ...props }: PropsWithChildren<ICinemaContext>) => (\n  <CinemaContext.Provider value={{ ...props }}>\n    {children}\n  </CinemaContext.Provider>\n);\n\nexport const useCinemaContext = () => useContext(CinemaContext);\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  background-color: rgba(0,0,0,0.5);\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 900;\n`;\n\nexport const Modale = styled.div`\n  width: 300px;\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  z-index: 1000;\n  position: relative;\n  padding: 30px;\n  box-sizing: border-box;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nexport const AddBtn = styled.button`\n  background-color: orange;\n  font-size: 2em;\n  color: #fff;\n  border: none;\n`;\n","import { IMovie } from '../types/movie';\n\nexport const MOVIES: IMovie[]  = [\n  {\n    id: 'mad-max',\n    title: 'Mad Max',\n    duration: 120,\n  },\n  {\n    id: 'obj-lune',\n    title: 'Objectif Lune',\n    duration: 156,\n  },\n  {\n    id: 'mib',\n    title: 'Men In Black',\n    duration: 92,\n  },\n  {\n    id: 'court',\n    title: 'Pipper (court métrage)',\n    duration: 15,\n  },\n  {\n    id: 'seminaire',\n    title: 'Séminaire (très long)',\n    duration: 420,\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { AddBtn, Backdrop, CloseBtn, Modale } from './style';\nimport { MOVIES } from '../../data/movies';\nimport { ISession } from \"../../types/session\";\n\ninterface IAddMovie {\n  onAddMovie: (session: ISession) => void;\n}\n\nconst AddMovie = ({ onAddMovie }: IAddMovie) => {\n  const [isOpen, openModal] = useState<boolean>(false);\n  const [selectedMovie, selectMovie] = useState<string | undefined>(undefined);\n  const [selectedTime, selectTime] = useState<string | undefined>('10:00');\n\n  const formIsComplete = selectedMovie !== undefined && selectedTime !== undefined;\n\n  useEffect(() => {\n    // reset\n    selectMovie(undefined);\n    selectTime('10:00');\n  }, [isOpen]);\n\n  const onSubmit = () => {\n    openModal(false);\n    if (formIsComplete) { onAddMovie({ movie: selectedMovie!, startTime: selectedTime! }); }\n  }\n\n  return (\n    <>\n      { isOpen && (\n        <Backdrop>\n          <Modale>\n            <CloseBtn onClick={() => openModal(false)}>X</CloseBtn>\n            <select onChange={(e) => selectMovie(e.currentTarget.value)}>\n              <option value=\"\">Choisir un film</option>\n              { MOVIES.map((movie) => <option key={movie.id} value={movie.id}>{movie.title}</option>) }\n            </select>\n            <input type=\"time\" value={selectedTime} onChange={(e) => selectTime(e.currentTarget.value)} />\n            <button type=\"button\" onClick={onSubmit} disabled={!formIsComplete}>Valider</button>\n          </Modale>\n        </Backdrop>\n      )}\n      <AddBtn type=\"button\" onClick={() => openModal(true)}>+</AddBtn>\n    </>\n  )\n};\n\nexport default AddMovie;\n","import styled from 'styled-components';\n\ninterface DurationBlock {\n  duration: number;\n}\n\nconst durationToHeight = (duration: number): number => duration * 2;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  border: 1px solid grey;\n  border-right: none;\n  border-left: none;\n`;\n\nconst commonProps = `\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n`;\n\nexport const InBlock = styled.div<DurationBlock>`\n  height: ${({ duration }) => `${durationToHeight(duration)}px`};\n  background-color: aqua;\n  ${commonProps}\n`;\n\nexport const OutBlock = styled.div<DurationBlock>`\n  height: ${({ duration }) => `${durationToHeight(duration)}px`};\n  background-color: teal;\n  color: #fff;\n  ${commonProps}\n`;\n\nexport const Movie = styled.div<DurationBlock>`\n  ${commonProps}\n  flex-direction: column;\n  height: ${({ duration }) => `${durationToHeight(duration)}px`};\n`;\n\nexport const DeleteBtn = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\ninterface IWithError {\n  error: boolean;\n}\n\nexport const Schedule = styled.div<IWithError>`\n  color: ${({ error }) => error ? 'red' : 'black'};\n`;\n","const timeStrToMinutes = (timeStr: string): number => {\n  const [hoursStr, minutesStr] = timeStr.split(':');\n  const hours = parseInt(hoursStr, 10);\n  const minutes = parseInt(minutesStr, 10);\n\n  return minutes + hours * 60;\n}\n\nexport default timeStrToMinutes;\n","import React from \"react\";\nimport { ISession } from \"../../types/session\";\nimport { DeleteBtn, InBlock, OutBlock, Movie, Wrapper, Schedule } from './style';\nimport { MOVIES } from '../../data/movies';\nimport { useCinemaContext } from \"../../contexts/cinema\";\nimport timeStrToMinutes from \"../utils/timeStrToMinutes\";\n\ninterface ISessionComp {\n  session: ISession;\n  deleteSession: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n}\n\nconst Session = ({ session: { movie, startTime }, deleteSession}: ISessionComp) => {\n  const completeMovie = MOVIES.find((m) => m.id === movie);\n  const { inDuration, outDuration, openingTime, closingTime } = useCinemaContext();\n\n  const scheduleError =\n    timeStrToMinutes(startTime) < timeStrToMinutes(openingTime)\n    || (timeStrToMinutes(startTime) + inDuration + outDuration) > timeStrToMinutes(closingTime);\n\n  return (\n    <Wrapper>\n      <InBlock duration={inDuration}>Première partie</InBlock>\n      <Movie duration={completeMovie?.duration || 0}>\n        <DeleteBtn onClick={deleteSession}>X</DeleteBtn>\n        <b>{completeMovie?.title}</b>\n        <Schedule error={scheduleError}>{`début ${startTime} / durée ${completeMovie?.duration} minutes`}</Schedule>\n      </Movie>\n      <OutBlock duration={outDuration}>Interséance</OutBlock>\n    </Wrapper>\n  )\n}\n\nexport default Session;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  min-width: 250px;\n  border: 1px solid grey;\n  margin-right: 20px;\n  min-height: 650px;\n`;\n\nexport const TechInfos = styled.div`\n  border: 1px solid grey;\n  border-left: none;\n  border-right: none;\n  padding: 8px;\n`;\n\nexport const Movies = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\ninterface IMaxProjectionTime {\n  error: boolean;\n}\n\nexport const MaxProjectionTime = styled.div<IMaxProjectionTime>`\n  color: ${({ error }) => error ? 'green' : 'red' }\n`;\n","const formatTime = (time: number): string => {\n  const hours = Math.floor(time / 60);\n  const minutes = time - (hours * 60);\n\n  return `${`0${hours}`.slice(-2)}h${`0${minutes}`.slice(-2)}`\n};\n\nexport default formatTime;\n","import { ISession } from \"../../types/session\";\nimport timeStrToMinutes from './timeStrToMinutes';\n\nexport const sortSessionByStartTime = (session1: ISession, session2: ISession) =>\n  timeStrToMinutes(session1.startTime) > timeStrToMinutes(session2.startTime) ? 1 : -1;\n","import React from \"react\";\nimport { useCinemaContext } from \"../../contexts/cinema\";\nimport { IRoom } from \"../../types/room\";\nimport { ISession } from \"../../types/session\";\nimport AddMovie from \"../AddMovie\";\nimport Session from \"../Session\";\nimport { Movies, TechInfos, Wrapper, MaxProjectionTime } from './style';\nimport { MOVIES } from '../../data/movies';\nimport formatTime from \"../utils/formatTime\";\nimport { sortSessionByStartTime } from '../utils/sortSession';\n\ninterface IRoomComp {\n  room: IRoom;\n  sessions: ISession[];\n  addSession: (session: ISession) => void;\n  deleteSession: (session: ISession) => void;\n}\n\nconst Room = ({ room: { index, seats, screen, sound }, sessions, addSession, deleteSession }: IRoomComp) => {\n  const { totalOpeningTime, inDuration, outDuration } = useCinemaContext();\n\n  const totalProjectionTime = sessions.reduce((total, session) => {\n    const completeMovie = MOVIES.find((m) => m.id === session.movie);\n    const sessionTotalDuration = completeMovie\n      ? inDuration + outDuration + completeMovie.duration\n      : 0;\n    return total += sessionTotalDuration;\n  }, 0);\n\n  return (\n    <Wrapper>\n      <h2>Salle {index}</h2>\n      <TechInfos>\n        <div>{seats} places</div>\n        <div>écran : {screen}</div>\n        <div>son : {sound}</div>\n      </TechInfos>\n      <TechInfos>\n        <div>Temps maximal d'ouverture : {formatTime(totalOpeningTime)}</div>        \n        <MaxProjectionTime error={totalProjectionTime < totalOpeningTime}>Temps de projection : {formatTime(totalProjectionTime)}</MaxProjectionTime>        \n      </TechInfos>\n      <Movies>\n        <AddMovie onAddMovie={(session) => addSession(session)} />\n        {\n          sessions\n            .sort(sortSessionByStartTime)\n            .map((session, index) => <Session key={index} session={session} deleteSession={() => deleteSession(session)} />)\n        }\n      </Movies>\n    </Wrapper>\n  );\n}\n\nexport default Room;\n","import { IRoom } from '../types/room';\n\nexport const ROOMS: IRoom[]  = [\n  {\n    index: 1,\n    seats: 135,\n    screen: '4:3',\n    sound: 'Dolby Digital'\n  },\n  {\n    index: 2,\n    seats: 250,\n    screen: '16:9',\n    sound: 'Surround 5.1'\n  },\n  {\n    index: 3,\n    seats: 100,\n    screen: '16:9',\n    sound: 'Classic 3'\n  },\n];\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 30px;\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nexport const InputGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 10px;\n  width: 150px;\n`;\n","import { parse, differenceInMinutes } from \"date-fns\";\n\nconst computeOpeningTime = (openingTime: string, closingTime: string) => (\n  differenceInMinutes(parse(closingTime, 'HH:mm', new Date()), parse(openingTime, 'HH:mm', new Date()))\n);\n\nexport default computeOpeningTime;\n","import React, { useState } from 'react';\nimport Room from './components/Room';\nimport { ROOMS } from './data/rooms';\n\nimport { Row, Wrapper, InputGroup } from './App-style';\nimport { ISession } from './types/session';\nimport { CinemaContextProvider } from './contexts/cinema';\nimport computeOpeningTime from './components/utils/computeOpeningTime';\n\nfunction App() {\n  const [inValue, setIn] = useState<number>(15);\n  const [outValue, setOut] = useState<number>(5);\n  const [openingTime, setOpeningTime] = useState<string>('09:00');\n  const [closingTime, setClosingTime] = useState<string>('23:00');\n\n  const [sessions, setSessions] = useState<Record<number, ISession[]>>({\n    1: [],\n    2: [],\n    3: [],\n  });\n\n  const addSession = (roomIndex: number, newSession: ISession) => {\n    setSessions({\n      ...sessions,\n      [roomIndex]: [...sessions[roomIndex], newSession],\n    });\n  }\n\n  const deleteSession = (roomIndex: number, sessionToRemove: ISession) => {\n    const roomSessions = sessions[roomIndex];\n    const indexToRemove = roomSessions.findIndex((s) => s.movie === sessionToRemove.movie && s.startTime === sessionToRemove.startTime);\n    roomSessions.splice(indexToRemove, 1);\n    \n    setSessions({\n      ...sessions,\n      [roomIndex]: roomSessions,\n    });\n  }\n\n  return (\n    <Wrapper>\n      <h1>Mercredi 12 novembre 2020 - semaine 32</h1>\n      <Row>\n        <InputGroup>\n          <label htmlFor=\"input-in\">Première partie</label>\n          <input id=\"input-in\" type=\"number\" min={0} value={inValue} onChange={(e) => setIn(parseInt(e.currentTarget.value, 10))} />\n        </InputGroup>\n        <InputGroup>\n          <label htmlFor=\"input-out\">Interséance</label>\n          <input id=\"input-out\" type=\"number\" min={0} value={outValue} onChange={(e) => setOut(parseInt(e.currentTarget.value, 10))} />\n        </InputGroup>\n        <InputGroup>\n          <label htmlFor=\"input-opening\">heure d'ouverture</label>\n          <input id=\"input-opening\" type=\"time\" value={openingTime} onChange={(e) => setOpeningTime(e.currentTarget.value)} />\n        </InputGroup>\n        <InputGroup>\n          <label htmlFor=\"input-closing\">heure de fermeture</label>\n          <input id=\"input-closing\" type=\"time\" value={closingTime} onChange={(e) => setClosingTime(e.currentTarget.value)} />\n        </InputGroup>\n      </Row>\n      <Row>\n        <CinemaContextProvider\n          inDuration={inValue}\n          outDuration={outValue}\n          openingTime={openingTime}\n          closingTime={closingTime}\n          totalOpeningTime={computeOpeningTime(openingTime, closingTime)}\n        >\n          { ROOMS.map((room) => (\n            <Room\n              key={room.index}\n              room={room}\n              sessions={sessions[room.index]}\n              addSession={(session) => addSession(room.index, session)}\n              deleteSession={(session) => deleteSession(room.index, session)}\n            />\n          ))}\n        </CinemaContextProvider>\n      </Row>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}